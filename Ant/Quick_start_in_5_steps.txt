Вебинар по теме:

Apache Ant – быстрый старт

Apache Ant должен быть знаком каждому Java-программисту: это популярный инструмент сборки ПО (build tool), полностью написанный на Java. Сценарий сборки представляет собой простой XML-файл. Несмотря на свою Java-направленность, этим инструментом пользуются и другие разработчики.

На вебинаре мы пройдём пять простых шагов, чтобы начать использовать Ant:
1. Скачаем, установим и настроим.
2. Разберёмся с принципами работы и форматом XML-сценария сборки.
3. Узнаем минимально необходимый список команд.
4. Напишем простейший Ant-сценарий.
5. Напишем сценарий для полного цикла сборки и тестирования простого проекта.

Нам потребуется Java SE Development Kit (JDK, скачиваем по адресу http://www.oracle.com/technetwork/java/javase/downloads), ваш любимый текстовый редактор (рекомендую Notepad++) и минимальные навыки работы в командной строке.

1. Скачиваем, устанавливаем, настраиваем

Посещаем веб-сайт https://ant.apache.org/ заходим в раздел Download/Binary Distributions и скачиваем файл apache-ant-1.10.1-bin.zip (возможно сейчас есть уже более свежая версия). Содержимое архива копируем в любой каталог, например "C:\Program Files\Ant". Затем добавляем путь к папке bin (C:\Program Files\Ant\bin) в системную переменную Path.

Проверяем работоспособность Ant, вызвав командную строку:

C:\>ant -version
Apache Ant(TM) version 1.10.1 compiled on February 2 2017

Если такое или аналогичное сообщение получено - всё в порядке.

2. Основные принципы работы

Сценарий сборки - обычный XML-файл. Он содержит определение целей (target), зависимостей (depends) и свойств (property). Простейший сценарий должен иметь хотя бы одну цель. Цель содержит вызов одной или нескольких команд или заданий (tasks). Зависимости связывают цели между собой. Например, есть цель "compile", a есть "run", зависимая от "compile". И если мы выполняем "run", сначала выполняется "compile".

3. Минимально необходимый список заданий (tasks)

Стандартная версия содержит более 150 заданий. Нам потребуются только шесть:

    echo - вывод сообщения в консоль
    mkdir - создание директорий
    delete - удаление файлов и директорий
    javac - компиляция Java-кода
    java - запуск class и jar файлов
    jar - создание jar файла

4. Простейший Ant-сценарий

    <?xml version="1.0"?>
    <project name="HelloWorld" default="default">
        <target name="default" description="Show the message">
            <echo>Hello, World!</echo>
        </target>
    </project>

5. Пишем сценарий для сборки и тестирования простого проекта

   Код проекта:

    public class HelloWorld {
        public static void main(String[] args) {
            System.out.println("Hello, World!");
        }
    }

    Сценарий для проекта, первая версия:

    <?xml version="1.0"?>
    <project name="HelloWorld" default="run">
        <target name="mkdir">
            <mkdir dir="build/classes"/>
        </target>
        <target name="compile" depends="mkdir">
            <javac destdir="build/classes" includeantruntime="false">
                <src path="src"/>
            </javac>
        </target>
        <target name="run" depends="compile">
            <java classname="HelloWorld" classpath="build/classes"/>
        </target>
        <target name="clean">
            <delete dir="build"/>
        </target>
    </project>

    Сценарий для проекта, вторая версия

    <?xml version="1.0"?>
    <project name="HelloWorld" default="run">
        <property name="src" location="src"/>
        <property name="build" location="build"/>
        <property name="classes" location="${build}/classes"/>
        <target name="mkdir">
            <mkdir dir="${classes}"/>
        </target>
        <target name="compile" depends="mkdir">
            <javac destdir="${classes}" includeantruntime="false">
                <src path="${src}"/>
            </javac>
        </target>
        <target name="run" depends="compile">
            <java classname="${ant.project.name}" classpath="${classes}"/>
        </target>
        <target name="clean">
            <delete dir="${build}"/>
        </target>
    </project>